#!/bin/sh

picom &

# A function to extract the resolutions of a given monitor and choose the best (highest) one.
choose_best_resolution() {
    local monitor="$1"
    # Get the resolutions supported by the monitor and pick the first one as it's the best
    resolution=$(xrandr --query | awk -v monitor="$monitor" '/connected/ {p = 0} $0 ~ monitor {p = 1} p && /^[[:space:]]+[0-9]+x[0-9]+/ {print $1; exit}')
    # Return the resolution
    echo $resolution
}

# Get the names of all connected monitors
monitors=($(xrandr --query | grep " connected" | cut -d" " -f1))

apply_scaling() {
    local monitor="$1"
    local scale_factor="0.8"

    # Fetch the current resolution of the monitor
    current_resolution=$(xrandr --query | grep "${monitor}" | grep -o '[0-9]\+x[0-9]\+' | head -n1)

    # Parse the width and height from the resolution
    read width height <<< $(echo $current_resolution | sed 's/x/ /')

    # Check if the current resolution is 4K (3840x2160)
    if [[ "$width" -eq 3840 && "$height" -eq 2160 ]]; then

        # Round the values since 'bc' may return floating-point numbers
        scaled_width=$(printf "%.0f" "$scaled_width")
        scaled_height=$(printf "%.0f" "$scaled_height")

        # Apply scaling and panning to simulate higher DPI
        xrandr --output "$monitor" --scale "${scale_factor}x${scale_factor}"
    fi
}

#------------------------------
# plase setting your primary monitor
# name berfore run this script
#------------------------------
if [[ ${#monitors[@]} -eq 1 ]]; then
    # Only one monitor connected
    best_resolution=$(choose_best_resolution "${monitors[0]}")
    export PRIMARY_MONITOR="${monitors[0]}"
    xrandr --output "${monitors[0]}" --mode "$best_resolution" --rotate normal &
    apply_scaling "${monitors[0]}"
    bspc monitor $PRIMARY_MONITOR -d 1 2 3 4 5 6 7 8 9 0
elif [[ ${#monitors[@]} -eq 2 ]]; then
    # Two monitors connected
    # Assuming DP-2 is always the primary
    if [[ "${monitors[0]}" == "PRIMARY_MONITOR" ]]; then
        primary="${monitors[0]}"
        external="${monitors[1]}"
    else
        primary="${monitors[1]}"
        external="${monitors[0]}"
    fi
    export PRIMARY_MONITOR="$primary"
    export EXTERNAL_MONITOR="$external"
    best_resolution_primary=$(choose_best_resolution "$primary")
    best_resolution_external=$(choose_best_resolution "$external")

    xrandr --output "$primary" --mode "$best_resolution_primary" --rotate normal --output "$external" --mode "$best_resolution_external" --rotate normal --right-of "$primary" &
    apply_scaling "$primary"
    apply_scaling "$external"
#    xrandr --output DP-2  --mode 1920x1080 --rotate normal --output DP-0   --mode 3840x2160 --rotate normal --right-of DP-2
    bspc monitor  "$primary" -d 1 2 3 4 5
    bspc monitor "$external" -d 6 7 8 9 0
fi

xset -b &
xset -dpms &
xset s off &
fcitx5 &

feh --bg-scale --no-fehbg $HOME/.config/bspwm/wal.jpg &
$HOME/.config/polybar/launch.sh &

pgrep -x sxhkd > /dev/null || sxhkd &

bspc rule -a maim  state=floating
bspc rule -a peek sticky=on state=fullscreen
bspc rule -a mupdf  state=floating
bspc rule -a neovide desktop=^2
bspc rule -a firefox-developer-edition desktop=^3
bspc rule -a zotero desktop=^8
bspc rule -a vlc desktop=^9
bspc rule -a telegram-desktop desktop=^0
bspc rule -a rustdesk desktop=^0

bspc config border_width        2
bspc config pointer_modifier mod4
bspc config pointer_action1 move
bspc config pointer_action2 resize_side
bspc config pointer_action3 resize_corner

bspc config pointer_action2 resize_corner
bspc config focused_border_color "#44ff6a"
bspc config normal_border_color  "#32344a"
bspc config active_border_color  "#44ff6a"
bspc config window_gap          20
bspc config top_padding         30

bspc config split_ratio          0.5
bspc config borderless_monocle   true
bspc config gapless_monocle      true








